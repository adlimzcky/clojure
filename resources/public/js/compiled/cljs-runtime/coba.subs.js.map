{"version":3,"sources":["coba/subs.cljs"],"mappings":";AAIA,2DAAA,3DAACA,oLAEA,WAAKC;AAAL,AACE,OAAA,mFAAOA;;AAEV,2DAAA,3DAACD,mLAEA,cAAAE,HAAKD;AAAL,AAAA,IAAAE,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASE;SAAT,AAAAD,4CAAAD,WAAA,IAAA,hEAAWG;AAAX,AACE,yDAAA,mFAAA,iEAAA,tMAACC,+CAAON,4IAAUK;;AAErB,2DAAA,3DAACN,sMAEA,cAAAQ,HAAKP;AAAL,AAAA,IAAAQ,aAAAD;QAAA,AAAAJ,4CAAAK,WAAA,IAAA,/DAASJ;eAAT,AAAAD,4CAAAK,WAAA,IAAA,tEAAWC;AAAX,AACE,8BAAA,WAAAC,lCAACC;AAAD,AAAS,yDAAA,mFAAA,sDAAAD,3LAACJ,+CAAON;GAAaS;;AAEjC,2DAAA,3DAACV,qLAEA,WAAKC;AAAL,AACE,sDAAA,yDAAA,xGAACY,4CAAIZ","names":["re_frame.core.reg_sub","db","p__41639","vec__41640","cljs.core.nth","_","id","cljs.core.get_in","p__41644","vec__41645","form-ids","p1__41643#","cljs.core/every?","cljs.core.get"],"sourcesContent":["(ns coba.subs\n  (:require\n   [re-frame.core :as re-frame]))\n\n(re-frame/reg-sub\n ::name\n (fn [db]\n   (:name db)))\n\n(re-frame/reg-sub \n ::form \n (fn [db [_ id]]\n   (get-in db [:form id] \"\")))\n\n(re-frame/reg-sub \n ::form-is-valid?\n (fn [db [_ form-ids]]\n   (every? #(get-in db [:form %])form-ids)))\n\n(re-frame/reg-sub\n ::matpel\n (fn [db]\n   (get db :matpel [])))\n"]}